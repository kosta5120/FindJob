//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FJweb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FindJobEntities1 : DbContext
    {
        public FindJobEntities1()
            : base("name=FindJobEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FJ_JobType> FJ_JobType { get; set; }
        public virtual DbSet<FJ_SubCategory_Work> FJ_SubCategory_Work { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<FJ_Categorys_Of_Works> FJ_Categorys_Of_Works { get; set; }
        public virtual DbSet<FJ_JobsPosts> FJ_JobsPosts { get; set; }
        public virtual DbSet<FJ_Attachment> FJ_Attachment { get; set; }
        public virtual DbSet<FJ_Sing_up> FJ_Sing_up { get; set; }
        public virtual DbSet<FJ_Citys> FJ_Citys { get; set; }
        public virtual DbSet<FJ_Region> FJ_Region { get; set; }
        public virtual DbSet<FJ_Administrators> FJ_Administrators { get; set; }
        public virtual DbSet<FJ_BadReports> FJ_BadReports { get; set; }
    
        public virtual int AllCategorysWork()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AllCategorysWork");
        }
    
        public virtual int Attachments(string name, string email, byte[] cV, string dateTime)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cVParameter = cV != null ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(byte[]));
    
            var dateTimeParameter = dateTime != null ?
                new ObjectParameter("dateTime", dateTime) :
                new ObjectParameter("dateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Attachments", nameParameter, emailParameter, cVParameter, dateTimeParameter);
        }
    
        public virtual int GetSubcategoryWork(string subCategoryWork)
        {
            var subCategoryWorkParameter = subCategoryWork != null ?
                new ObjectParameter("SubCategoryWork", subCategoryWork) :
                new ObjectParameter("SubCategoryWork", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSubcategoryWork", subCategoryWorkParameter);
        }
    
        public virtual ObjectResult<JobsPosts_Result> JobsPosts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsPosts_Result>("JobsPosts");
        }
    
        public virtual int SavePostJob(string title, string nammeOfPublisher, string address, string salary, string jobType, string email, string description, string requirements, string categoryJob, string numberOfPosition, string dateTime)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var nammeOfPublisherParameter = nammeOfPublisher != null ?
                new ObjectParameter("nammeOfPublisher", nammeOfPublisher) :
                new ObjectParameter("nammeOfPublisher", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var salaryParameter = salary != null ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(string));
    
            var jobTypeParameter = jobType != null ?
                new ObjectParameter("jobType", jobType) :
                new ObjectParameter("jobType", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var requirementsParameter = requirements != null ?
                new ObjectParameter("Requirements", requirements) :
                new ObjectParameter("Requirements", typeof(string));
    
            var categoryJobParameter = categoryJob != null ?
                new ObjectParameter("categoryJob", categoryJob) :
                new ObjectParameter("categoryJob", typeof(string));
    
            var numberOfPositionParameter = numberOfPosition != null ?
                new ObjectParameter("numberOfPosition", numberOfPosition) :
                new ObjectParameter("numberOfPosition", typeof(string));
    
            var dateTimeParameter = dateTime != null ?
                new ObjectParameter("dateTime", dateTime) :
                new ObjectParameter("dateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SavePostJob", titleParameter, nammeOfPublisherParameter, addressParameter, salaryParameter, jobTypeParameter, emailParameter, descriptionParameter, requirementsParameter, categoryJobParameter, numberOfPositionParameter, dateTimeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<CountPoistPerMonth_Result> CountPoistPerMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountPoistPerMonth_Result>("CountPoistPerMonth");
        }
    
        public virtual ObjectResult<QuantityOfJobsInEachCity_Result> QuantityOfJobsInEachCity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuantityOfJobsInEachCity_Result>("QuantityOfJobsInEachCity");
        }
    }
}
